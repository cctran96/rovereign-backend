puts "destroying current seeds..."
InventoryItem.destroy_all
Inventory.destroy_all
UserCharacter.destroy_all
Drop.destroy_all
Monster.destroy_all
Item.destroy_all
Skill.destroy_all
Character.destroy_all
Map.destroy_all
User.destroy_all
Experience.destroy_all

puts "creating seeds..."

jasper = User.create(username: "jasper20", password: "password", bio: "Taste my cupid shuffle!")

spearman = Character.create(role: "spearman", base_stats: {hp: 50, mp: 25, str: 50, dex: 25, int: 0, cri: 1,spd: 25, def: 25})
crusader = Character.create(role: "crusader", base_stats: {hp: 100, mp: 50, str: 100, dex: 50, int: 25, cri: 10, spd: 50, def: 50})
hero = Character.create(role: "hero", base_stats: {hp: 200, mp: 100, str: 200, dex: 100, int: 50, cri: 20, spd: 100, def: 100})
hunter = Character.create(role: "hunter", base_stats: {hp: 50, mp: 25, str: 0, dex: 50, int: 25, cri: 1,spd: 25, def: 25})
crossbowman = Character.create(role: "crossbowman", base_stats: {hp: 100, mp: 50, str: 25, dex: 100, int: 50, cri: 10,spd: 50, def: 50})
robinhood = Character.create(role: "robinhood", base_stats: {hp: 200, mp: 100, str: 50, dex: 200, int: 100, cri: 20,spd: 100, def: 100})
magician = Character.create(role: "magician", base_stats: {hp: 50, mp: 50, str: 0, dex: 0, int: 50, cri: 1,spd: 25, def: 25})
sorcerer = Character.create(role: "sorcerer", base_stats: {hp: 100, mp: 100, str: 0, dex: 25, int: 100, cri: 10,spd: 50, def: 50})
elysianist = Character.create(role: "elysianist", base_stats: {hp: 200, mp: 200, str: 25, dex: 25, int: 200, cri: 20,spd: 100, def: 100})

primeval_forest = Map.create(name: "primeval_forest")
wychwood = Map.create(name: "wychwood")
aokigahara = Map.create(name: "aokigahara")
twilight_woods = Map.create(name: "twilight_woods")
tranquil_falls = Map.create(name: "tranquil_falls")
mount_ender = Map.create(name: "mount_ender")
hercule_peak = Map.create(name: "hercule_peak")
eerie_mansion = Map.create(name: "eerie_mansion")
spectral_grave = Map.create(name: "spectral_grave")
arachnids_den = Map.create(name: "arachnids_den")
sataia_park = Map.create(name: "sataia_park")
elven_hideout = Map.create(name: "elven_hideout")
arctic_forest = Map.create(name: "arctic_forest")
chionidis = Map.create(name: "chionidis")
nix_village = Map.create(name: "nix_village")
pere_noel = Map.create(name: "pere_noel")

cupidStats = spearman.base_stats.merge!(current_hp: spearman.base_stats[:hp]).merge!(current_mp: spearman.base_stats[:mp])
cupid = UserCharacter.create(user: jasper, character: spearman, name: "Cupid", gold: 0, level: 1, experience: 0, stats: cupidStats)

vang_satyr = Monster.create(name: "vang_satyr", base_stats: {hp: 10, mp: 0, str: 10, dex: 10, int: 10, cri: 2, spd: 10, def: 10}, base_gold: 100, base_exp: 30, map: primeval_forest)
owr_satyr = Monster.create(name: "owr_satyr", base_stats: {hp: 20, mp: 0, str: 20, dex: 20, int: 20, cri: 2, spd: 20, def: 20}, base_gold: 150, base_exp: 60, map: wychwood)
santri_satyr = Monster.create(name: "santri_satyr", base_stats: {hp: 30, mp: 0, str: 30, dex: 30, int: 30, cri: 2, spd: 30, def: 30}, base_gold: 200, base_exp: 90, map: aokigahara)
maro_minotaur = Monster.create(name: "maro_minotaur", base_stats: {hp: 40, mp: 0, str: 40, dex: 40, int: 40, cri: 10, spd: 40, def: 40}, base_gold: 250, base_exp: 120, map: tranquil_falls)
griza_minotaur = Monster.create(name: "griza_minotaur", base_stats: {hp: 50, mp: 0, str: 50, dex: 50, int: 50, cri: 10, spd: 50, def: 50}, base_gold: 300, base_exp: 150, map: twilight_woods)
marmoreal_minotaur = Monster.create(name: "marmoreal_minotaur", base_stats: {hp: 60, mp: 0, str: 60, dex: 60, int: 60, cri: 10, spd: 60, def: 60}, base_gold: 350, base_exp: 180, map: hercule_peak)
gidgee_golem = Monster.create(name: "gidgee_golem", base_stats: {hp: 70, mp: 0, str: 70, dex: 70, int: 70, cri: 10, spd: 70, def: 70}, base_gold: 400, base_exp: 210, map: nix_village)
stone_golem = Monster.create(name: "stone_golem", base_stats: {hp: 80, mp: 0, str: 80, dex: 80, int: 80, cri: 10, spd: 80, def: 80}, base_gold: 450, base_exp: 240, map: arctic_forest)
jade_golem = Monster.create(name: "jade_golem", base_stats: {hp: 90, mp: 0, str: 90, dex: 90, int: 90, cri: 10, spd: 90, def: 90}, base_gold: 500, base_exp: 270, map: pere_noel)
arcane_wraith = Monster.create(name: "arcane_wraith", base_stats: {hp: 100, mp: 100, str: 100, dex: 100, int: 100, cri: 10, spd: 100, def: 100}, base_gold: 550, base_exp: 300, map: elven_hideout)
occult_wraith = Monster.create(name: "occult_wraith", base_stats: {hp: 110, mp: 110, str: 110, dex: 110, int: 110, cri: 10, spd: 110, def: 110}, base_gold: 600, base_exp: 330, map: arachnids_den)
pyro_wraith = Monster.create(name: "pyro_wraith", base_stats: {hp: 120, mp: 120, str: 120, dex: 120, int: 120, cri: 10, spd: 120, def: 120}, base_gold: 650, base_exp: 360, map: spectral_grave)

inventory = Inventory.create(user_character_id: cupid.id)

pimple_berry = Item.create(name: "pimple_berry", description: "A pink berry with purple spots that resemble pimples.")
nympha_berry = Item.create(name: "nympha_berry", description: "A green berry that resembles the immature form of some insects.")
renal_berry = Item.create(name: "renal_berry", description: "A yellow berry known to cause kidney stones when ingested without the removal of its toxins.")
cerebral_berry = Item.create(name: "cerebral_berry", description: "A blue berry with wrinkles that resemble gyri of the brain.")
pity_berry = Item.create(name: "pity_berry", description: "A droopy red berry that causes one to feel sorrow and grief if ingested raw.")
lilium = Item.create(name: "lilium", description: "A true lily that has been blessed by elves.")
zinnia = Item.create(name: "zinnia", description: "A green sunflower found in scorching hot grasslands.")
mandrake = Item.create(name: "mandrake", description: "A man-shaped plant known to put people to sleep.")
hydrangea = Item.create(name: "hydrangea", description: "A magical plant that grows nears roaring waterfalls.")
agaric = Item.create(name: "agaric", description: "A mushroom that has evolved to produce blood.")
monster_eyeball = Item.create(name: "monster_eyeball", description: "A monster's eyeball preserved in the monster's own blood.")
monster_claw = Item.create(name: "monster_claw", description: "A monster's claw that has been cleansed.")
monster_skull = Item.create(name: "monster_skull", description: "A monster's skull that has been cleansed.")
lolihop = Item.create(name: "lolihop", description: "A large poisonous frog that resides in damp swamps.")
scarab = Item.create(name: "scarab", description: "A large golden beetle that originates from ancient Egypt.")
health_potion = Item.create(name: "health_potion", description: "A concentrated potion made out of pity berries. It heals the user's health by 30.", effect: {increase: {hp: 30}, craft: ["5 pity_berry"]})
mana_potion = Item.create(name: "mana_potion", description: "A concentrated potion made out of cerebral berries. It heals the user's mana by 30.", effect: {increase: {mp: 30}, craft: ["5 cerebral_berry"]})
strength_potion = Item.create(name: "strength_potion", description: "A concentrated potion made out of renal berries. It temporarily increases the user's strength by 10.", effect: {increase: {str: 10}, craft: ["5 renal_berry"]})
range_potion = Item.create(name: "range_potion", description: "A concentrated potion made out of nympha berries. It temporarily increases the user's dexterity by 10.", effect: {increase: {dex: 10}, craft: ["5 nympha_berry"]})
magic_potion = Item.create(name: "magic_potion", description: "A concentrated potion made out of pimple berries. It temporarily increases the user's intelligence by 10.", effect: {increase: {int: 10}, craft: ["5 pimple_berry"]})
distilled_health_potion = Item.create(name: "distilled_health_potion", description: "A refined potion made out of pity berries and agarics. It heals the user's health by 70.", effect: {increase: {hp: 70}, craft: ["10 pity_berry, 5 agaric"]})
distilled_mana_potion = Item.create(name: "distilled_mana_potion", description: "A refined potion made out of cerebral berries and hydrangeas. It heals the user's mana by 70.", effect: {increase: {mp: 70}, craft: ["10 cerebral_berry, 5 hydrangea"]})
distilled_strength_potion = Item.create(name: "distilled_strength_potion", description: "A refined potion made out of renal berries and mandrakes. It temporarily increases the user's strength by 30.", effect: {increase: {str: 30}, craft: ["10 renal_berry, 5 mandrake"]})
distilled_range_potion = Item.create(name: "distilled_range_potion", description: "A refined potion made out of nympha berries and zinnias. It temporarily increases the user's dexterity by 30.", effect: {increase: {dex: 30}, craft: ["10 nympha_berry, 5 zinnia"]})
distilled_magic_potion = Item.create(name: "distilled_magic_potion", description: "A refined potion made out of pimple berries and liliums. It temporarily increases the user's intelligence by 30.", effect: {increase: {int: 30}, craft: ["10 pimple_berry, 5 lilium"]})
elixir_of_vigor = Item.create(name: "elixir_of_vigor", description: "A purified potion made out of pity berries, agarics, and a monster skull. It heals the user's health by 150.", effect: {increase: {hp: 150}, craft: ["20 pity_berry, 10 agaric, 1 monster_skull"]})
elixir_of_enchantment = Item.create(name: "elixir_of_enchantment", description: "A purified potion made out of cerebral berries, hydrangeas, and a monster claw. It heals the user's mana by 150.", effect: {increase: {mp: 150}, craft: ["20 cerebral_berry, 10 hydrangea, 1 monster_claw"]})
elixir_of_might = Item.create(name: "elixir_of_might", description: "A purified potion made out of renal berries, mandrakes, and a scarab. It temporarily increases the user's strength by 50.", effect: {increase: {str: 50}, craft: ["20 renal_berry, 10 mandrake, 1 scarab"]})
elixir_of_acuity = Item.create(name: "elixir_of_acuity", description: "A purified potion made out of nympha berries, zinnias, and a lolihop. It temporarily increases the user's dexterity by 50.", effect: {increase: {dex: 50}, craft: ["20 nympha_berry, 10 zinnia, 1 lolihop"]})
elixir_of_necromancy = Item.create(name: "elixir_of_necromancy", description: "A purified potion made out of pimple berries, liliums, and a monster eyeball. It temporarily increases the user's intelligence by 50.", effect: {increase: {int: 50}, craft: ["20 pimple_berry, 10 lilium, 1 monster_eyeball"]})

Drop.create(monster: vang_satyr, item: pimple_berry, amount: 1)
Drop.create(monster: vang_satyr, item: nympha_berry, amount: 1)
Drop.create(monster: vang_satyr, item: renal_berry, amount: 1)
Drop.create(monster: vang_satyr, item: cerebral_berry, amount: 1)
Drop.create(monster: vang_satyr, item: pity_berry, amount: 1)

Drop.create(monster: owr_satyr, item: health_potion, amount: 1)
Drop.create(monster: owr_satyr, item: mana_potion, amount: 1)
Drop.create(monster: owr_satyr, item: strength_potion, amount: 1)
Drop.create(monster: owr_satyr, item: range_potion, amount: 1)
Drop.create(monster: owr_satyr, item: magic_potion, amount: 1)

Drop.create(monster: santri_satyr, item: hydrangea, amount: 1)
Drop.create(monster: santri_satyr, item: mandrake, amount: 1)
Drop.create(monster: santri_satyr, item: agaric, amount: 1)
Drop.create(monster: santri_satyr, item: zinnia, amount: 1)
Drop.create(monster: santri_satyr, item: lilium, amount: 1)

Drop.create(monster: maro_minotaur, item: health_potion, amount: 3)
Drop.create(monster: maro_minotaur, item: mana_potion, amount: 3)
Drop.create(monster: maro_minotaur, item: range_potion, amount: 3)
Drop.create(monster: maro_minotaur, item: magic_potion, amount: 3)
Drop.create(monster: maro_minotaur, item: strength_potion, amount: 3)

Drop.create(monster: griza_minotaur, item: pimple_berry, amount: 3)
Drop.create(monster: griza_minotaur, item: nympha_berry, amount: 3)
Drop.create(monster: griza_minotaur, item: renal_berry, amount: 3)
Drop.create(monster: griza_minotaur, item: cerebral_berry, amount: 3)
Drop.create(monster: griza_minotaur, item: pity_berry, amount: 3)

Drop.create(monster: marmoreal_minotaur, item: distilled_magic_potion, amount: 1)
Drop.create(monster: marmoreal_minotaur, item: distilled_range_potion, amount: 1)
Drop.create(monster: marmoreal_minotaur, item: distilled_strength_potion, amount: 1)
Drop.create(monster: marmoreal_minotaur, item: hydrangea, amount: 3)
Drop.create(monster: marmoreal_minotaur, item: mandrake, amount: 3)
Drop.create(monster: marmoreal_minotaur, item: agaric, amount: 3)
Drop.create(monster: marmoreal_minotaur, item: zinnia, amount: 3)
Drop.create(monster: marmoreal_minotaur, item: lilium, amount: 3)

Drop.create(monster: gidgee_golem, item: distilled_strength_potion, amount: 2)
Drop.create(monster: gidgee_golem, item: distilled_mana_potion, amount: 1)
Drop.create(monster: gidgee_golem, item: distilled_health_potion, amount: 1)
Drop.create(monster: gidgee_golem, item: distilled_range_potion, amount: 2)
Drop.create(monster: gidgee_golem, item: distilled_magic_potion, amount: 2)

Drop.create(monster: stone_golem, item: distilled_health_potion, amount: 2)
Drop.create(monster: stone_golem, item: distilled_mana_potion, amount: 2)
Drop.create(monster: stone_golem, item: scarab, amount: 1)
Drop.create(monster: stone_golem, item: lolihop, amount: 1)
Drop.create(monster: stone_golem, item: monster_eyeball, amount: 1)

Drop.create(monster: jade_golem, item: lolihop, amount: 2)
Drop.create(monster: jade_golem, item: monster_eyeball, amount: 2)
Drop.create(monster: jade_golem, item: scarab, amount: 2)
Drop.create(monster: jade_golem, item: monster_claw, amount: 1)
Drop.create(monster: jade_golem, item: monster_skull, amount: 1)

Drop.create(monster: arcane_wraith, item: monster_claw, amount: 2)
Drop.create(monster: arcane_wraith, item: monster_skull, amount: 2)
Drop.create(monster: arcane_wraith, item: elixir_of_vigor, amount: 1)
Drop.create(monster: arcane_wraith, item: elixir_of_enchantment, amount: 1)

Drop.create(monster: occult_wraith, item: elixir_of_acuity, amount: 1)
Drop.create(monster: occult_wraith, item: elixir_of_might, amount: 1)
Drop.create(monster: occult_wraith, item: elixir_of_necromancy, amount: 1)

Drop.create(monster: pyro_wraith, item: elixir_of_enchantment, amount: 2)
Drop.create(monster: pyro_wraith, item: elixir_of_vigor, amount: 2)

electroball = Skill.create(name: "electroball", effect: {mp: 10, attack: {damage: 20}}, description: "Unleashes a ball of electricity towards the enemy.", level: 1, character: magician)
magic_buff = Skill.create(name: "magic_buff", effect: {mp: 25, buff: {int: 10}}, description: "Increases the player's intelligence by 10%.", level: 2, character: magician)
flee = Skill.create(name: "flee", effect: {chance: {mp: 20, passive: "flee"}}, description: "Gives the player a 10% chance of escaping from battle when their health drops below 10%.", level: 3, character: magician)
fireball = Skill.create(name: "fireball", effect: {mp: 20, attack: {damage: 25}}, description: "Unleashes a ball of fire towards the enemy.", level: 5, character: magician)
healing_buff = Skill.create(name: "healing_buff", effect: {mp: 30, heal: {hp: 40}}, description: "Heals the player by 30.", level: 7, character: magician)
confusion = Skill.create(name: "confusion", effect: {mp: 30, debuff: {cri: 50}}, description: "Disorients the enemy, causing its critical rate to be halved.", level: 10, character: magician)
lightning_strike = Skill.create(name: "lightning_strike", effect: {mp: 40, attack: {damage: 40}}, description: "Casts a bolt of lightning, striking the opponent.", level: 12, character: magician)
sorcery = Skill.create(name: "sorcery", effect: {mp: 50, buff: {int: 20}}, description: "Increases the player's intelligence by 20%.", level: 15, character: magician)
lightning_missile = Skill.create(name: "lightning_missile", effect: {mp: 50, attack: {damage: 50}}, description: "Blasts a electric current through the air, shocking the opponent in the process.", level: 18, character: magician)
absorb = Skill.create(name: "absorb", effect: {mp: 0, passive: "absorb"}, description: "Absorbs the life energy out of the enemy, taking some of their mana.", level: 20, character: magician)
storm = Skill.create(name: "storm", effect: {mp: 60, attack: {damage: 60}}, description: "Traps the enemy in a lightning storm, causing it to be electrocuted.", level: 22, character: magician)
rebirth = Skill.create(name: "rebirth", effect: {mp: 120, passive: "revive"}, description: "Allows the player to rise from the ashes on death.", level: 25, character: magician)
meteor_strike = Skill.create(name: "meteor_strike", effect: {mp: 80, attack: {damage: 80}}, description: "Summons numerous meteorites to strike down the enemy.", level: 27, character: magician)
destruction = Skill.create(name: "destruction", effect: {mp: 100, attack: {damage: 100}}, description: "Casts an ancient fire spell deriving from the breath of a dragon.", level: 29, character: magician)
armageddon = Skill.create(name: "armageddon", effect: {mp: 120, attack: {damage: 120}}, description: "Summons a destructive asteroid capable of destroying the planet.", level: 30, character: magician)

blunt_strike = Skill.create(name: "blunt_strike", effect: {mp: 7, attack: {damage: 10}}, description: "Deals the enemy a dull hit.", level: 1, character: spearman)
strength_buff = Skill.create(name: "strength_buff", effect: {mp: 20, buff: {str: 10}}, description: "Increases the player's strength by 10%.", level: 2, character: spearman)
scream = Skill.create(name: "scream", effect: {mp: 10, debuff: {def: 10}}, description: "Lets out a thunderous scream, lowering the enemy's defense by 10%.", level: 3, character: spearman)
poison_jab = Skill.create(name: "poison_jab", effect: {mp: 12, attack: {damage: 20}}, description: "Strikes the enemy with poison.", level: 5, character: spearman)
deflect = Skill.create(name: "deflect", effect: {mp: 15, passive: "deflect"}, description: "Waits for the enemy to attack and then deal double the damage.", level: 7, character: spearman)
curse = Skill.create(name: "curse", effect: {mp: 10, debuff: {dex: 20}}, description: "Curses the enemy, lowering their dexterity by 20%.", level: 10, character: spearman)
charge = Skill.create(name: "charge", effect: {mp: 25, attack: {damage: 35}}, description: "Charges through the enemy, dealing a massive strike in the process.", level: 12, character: spearman)
hyper_strength = Skill.create(name: "hyper_strength", effect: {mp: 40, buff: {str: 20}}, description: "Increases the player's strength by 20%.", level: 15, character: spearman)
skull_bash = Skill.create(name: "skull_bash", effect: {mp: 40, attack: {damage: 50}}, description: "Crushes the enemy's skull, with a direct attack.", level: 18, character: spearman)
taunt = Skill.create(name: "taunt", effect: {mp: 35, debuff: {cri: 100}}, description: "Taunts the enemy, causing it to lose its composure, which lowers its critical chance to 0.", level: 20, character: spearman)
critical_strike = Skill.create(name: "critical_strike", effect: {mp: 50, critical: {damage: 30}}, description: "Lunges forward to strike the oppoenent with a 100% critical rate.", level: 22, character: spearman)
renewal = Skill.create(name: "renewal", effect: {mp: 100, heal: {hp: 100, mp: 100}}, description: "Uses an ancient technique to heal the player's hp and mp by 100.", level: 25, character: spearman)
guillotine = Skill.create(name: "guillotine", effect: {mp: 65, attack: {damage: 60}}, description: "Strikes the neck of the enemy with a immeasurable speed and precision.", level: 27, character: spearman)
hyper_charge = Skill.create(name: "hyper_charge", effect: {mp: 75, attack: {damage: 80}}, description: "Charges at the enemy at the speed of sound, dealing countless slashes.", level: 29, character: spearman)
blood_thirster = Skill.create(name: "blood_thirster", effect: {mp: 100, attack: {damage: 100}}, description: "Executes the enemy through the use of an ancient technique that uses the opponent's own blood.", level: 30, character: spearman)

sneak = Skill.create(name: "sneak", effect: {mp: 7, attack: {damage: 10}}, description: "The player has a 20% chance of sneaking in a hit on the enemey before the start of the battle.", level: 1, character: hunter)
range_buff = Skill.create(name: "range_buff", effect: {mp: 15, buff: {dex: 10}}, description: "Increases the player's dexterity by 10%.", level: 2, character: hunter)
crybaby = Skill.create(name: "crybaby", effect: {mp: 10, debuff: {spd: 50}}, description: "Pretend to cry, dropping the enemy's guard and lowering their speed by 50%.", level: 3, character: hunter)
holy_shot = Skill.create(name: "holy_shot", effect: {mp: 12, attack: {damage: 20}}, description: "Shoot a ball of spiritual energy towards the enemy.", level: 5, character: hunter)
eagle_eye = Skill.create(name: "eagle_eye", effect: {mp: 25, buff: {dex: 20}}, description: "Increases the player's dexterity by 20%.", level: 7, character: hunter)
sleep_powder = Skill.create(name: "sleep_powder", effect: {mp: 30, passive: "sleep"}, description: "Puts the enemy to sleep for 1-3 rounds.", level: 10, character: hunter)
arrow_mirage = Skill.create(name: "arrow_mirage", effect: {mp: 30, attack: {damage: 35}}, description: "Fires a sharpened arrow, hiding it among several mirages.", level: 12, character: hunter)
marksmanship = Skill.create(name: "marksmanship", effect: {mp: 40, buff: {dex: 30}}, description: "Increases the player's dexterity by 30%.", level: 15, character: hunter)
silhouette_mirage = Skill.create(name: "silhouette_mirage", effect: {mp: 45, attack: {damage: 50}}, description: "Creates clones of the player before sending out a barrage of arrows.", level: 18, character: hunter)
intimidate = Skill.create(name: "intimidate", effect: {mp: 50, debuff: {str: 30}}, description: "Causes the opponent to be scared of making any move, decreasing their strength by 30%.", level: 20, character: hunter)
thief = Skill.create(name: "thief", effect: {mp: 20, heal: 30}, description: "Snatches a part of the enemy's life force for yourself, slightly increasing your hp.", level: 22, character: hunter)
prayer = Skill.create(name: "prayer", effect: {mp: 100, passive: "prayer"}, description: "Prays to the gods, healing the player fully the next turn.", level: 25, character: hunter)
summoning_circle = Skill.create(name: "summoning_circle", effect: {mp: 80, passive: "summon"}, description: "Summons a random monster to fight alongside the user.", level: 27, character: hunter)
arrow_storm = Skill.create(name: "arrow_storm", effect: {mp: 75, attack: {damage: 80}}, description: "Traps the enemy in a bombardment of arrows.", level: 29, character: hunter)
mortal_blow = Skill.create(name: "mortal_blow", effect: {mp: 100, attack: {damage: 100}}, description: "Launches an arrow directly faster than the speed of sound into the head of the enemy, beheading it.", level: 30, character: hunter)

Experience.create(level: 1, exp: 0)
Experience.create(level: 2, exp: 83)
Experience.create(level: 3, exp: 174)
Experience.create(level: 4, exp: 276)
Experience.create(level: 5, exp: 388)
Experience.create(level: 6, exp: 512)
Experience.create(level: 7, exp: 650)
Experience.create(level: 8, exp: 801)
Experience.create(level: 9, exp: 969)
Experience.create(level: 10, exp: 1154)
Experience.create(level: 11, exp: 1358)
Experience.create(level: 12, exp: 1584)
Experience.create(level: 13, exp: 1833)
Experience.create(level: 14, exp: 2107)
Experience.create(level: 15, exp: 2411)
Experience.create(level: 16, exp: 2746)
Experience.create(level: 17, exp: 3115)
Experience.create(level: 18, exp: 3523)
Experience.create(level: 19, exp: 3973)
Experience.create(level: 20, exp: 4470)
Experience.create(level: 21, exp: 5018)
Experience.create(level: 22, exp: 5624)
Experience.create(level: 23, exp: 6291)
Experience.create(level: 24, exp: 7028)
Experience.create(level: 25, exp: 7842)
Experience.create(level: 26, exp: 8740)
Experience.create(level: 27, exp: 9730)
Experience.create(level: 28, exp: 10824)
Experience.create(level: 29, exp: 12031)
Experience.create(level: 30, exp: 13363)

puts "seeding done"